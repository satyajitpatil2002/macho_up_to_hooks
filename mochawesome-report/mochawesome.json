{
  "stats": {
    "suites": 8,
    "tests": 18,
    "passes": 18,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-26T09:32:38.982Z",
    "end": "2023-12-26T09:32:39.011Z",
    "duration": 29,
    "testsRegistered": 18,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "03f42396-5aec-433a-a614-57142e62e57b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "98148fd9-2ca8-4967-9f4f-e6183789c914",
          "title": "add function",
          "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\app.spec.js",
          "file": "\\test\\app.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should add two positive numbers correctly",
              "fullTitle": "add function should add two positive numbers correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(5, 3)).to.be.equal(8);",
              "err": {},
              "uuid": "0ab038d0-2370-42f7-97a4-2f5c1818b0c9",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a positive number and zero correctly",
              "fullTitle": "add function should add a positive number and zero correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(2, 0)).to.be.equal(2);",
              "err": {},
              "uuid": "0e3c4d13-84b5-4d50-997f-681cd8724222",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add a negative number and a positive number correctly",
              "fullTitle": "add function should add a negative number and a positive number correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-5, 3)).to.be.equal(-2);",
              "err": {},
              "uuid": "3189ee71-09a5-43a4-8467-b22435a7cb3e",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add zero and a negative number correctly",
              "fullTitle": "add function should add zero and a negative number correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(0, -4)).to.be.equal(-4);",
              "err": {},
              "uuid": "27b14b49-9a22-4c71-8e38-b1e2cc65a1d8",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should add two negative numbers correctly",
              "fullTitle": "add function should add two negative numbers correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(-7, -3)).to.be.equal(-10);",
              "err": {},
              "uuid": "2dc5c2c1-3301-4c38-bf2c-abaae9d86cc1",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle adding decimal numbers correctly",
              "fullTitle": "add function should handle adding decimal numbers correctly",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(add(1.5, 2.5)).to.be.equal(4);",
              "err": {},
              "uuid": "89a3d16c-2b76-4256-97bd-f32261c821e1",
              "parentUUID": "98148fd9-2ca8-4967-9f4f-e6183789c914",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0ab038d0-2370-42f7-97a4-2f5c1818b0c9",
            "0e3c4d13-84b5-4d50-997f-681cd8724222",
            "3189ee71-09a5-43a4-8467-b22435a7cb3e",
            "27b14b49-9a22-4c71-8e38-b1e2cc65a1d8",
            "2dc5c2c1-3301-4c38-bf2c-abaae9d86cc1",
            "89a3d16c-2b76-4256-97bd-f32261c821e1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d37ddb56-7f66-4abd-aa54-abf45a4f1e19",
          "title": "Async Tests with Promises",
          "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\async.app.spec.js",
          "file": "\\test\\async.app.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "dd9a87bc-ab4d-4700-bcc4-0e91d6f19b61",
              "title": "(using done)",
              "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\async.app.spec.js",
              "file": "\\test\\async.app.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch data successfully",
                  "fullTitle": "Async Tests with Promises (using done) should fetch data successfully",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const axiosGetStub = chai.spy.returns(Promise.resolve({ data: { data: { email: 'michael.lawson@reqres.in' } } }));\nchai.spy.on(axios, 'get', axiosGetStub);\nfetchData()\n  .then((data) => {\n    expect(data.email).to.be.equal('michael.lawson@reqres.in');\n    expect(axios.get).to.have.been.called.with('https://reqres.in/api/users?page=2');\n  })\n  .then(done)\n  .catch(done);",
                  "err": {},
                  "uuid": "7b5d3504-d223-4bbf-9316-bd6dae2f96b4",
                  "parentUUID": "dd9a87bc-ab4d-4700-bcc4-0e91d6f19b61",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b5d3504-d223-4bbf-9316-bd6dae2f96b4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "add6c1cd-abbc-4e64-bb98-5a352cc64403",
              "title": "(using Promise)",
              "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\async.app.spec.js",
              "file": "\\test\\async.app.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch data successfully",
                  "fullTitle": "Async Tests with Promises (using Promise) should fetch data successfully",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.spy.restore(); // Clear the spy before using it again\nconst axiosGetStub = chai.spy.returns(Promise.resolve({ data: { data: { email: 'michael.lawson@reqres.in' } } }));\nchai.spy.on(axios, 'get', axiosGetStub);\nreturn expect(fetchData()).to.eventually.have.property('email', 'michael.lawson@reqres.in');",
                  "err": {},
                  "uuid": "4fde4df5-431f-4558-b890-e47be3d9eb53",
                  "parentUUID": "add6c1cd-abbc-4e64-bb98-5a352cc64403",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4fde4df5-431f-4558-b890-e47be3d9eb53"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "2d0fcd26-2fb0-4912-8315-403c70596775",
              "title": "(using async/await)",
              "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\async.app.spec.js",
              "file": "\\test\\async.app.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch data successfully",
                  "fullTitle": "Async Tests with Promises (using async/await) should fetch data successfully",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai.spy.restore(); // Clear the spy before using it again\nconst axiosGetStub = chai.spy.returns(Promise.resolve({ data: { data: { email: 'michael.lawson@reqres.in' } } }));\nchai.spy.on(axios, 'get', axiosGetStub);\nconst data = await fetchData();\nexpect(data.email).to.be.equal('michael.lawson@reqres.in');\nexpect(axios.get).to.have.been.called.with('https://reqres.in/api/users?page=2');",
                  "err": {},
                  "uuid": "7102ff8d-d976-49bc-8652-ca773d6e8d35",
                  "parentUUID": "2d0fcd26-2fb0-4912-8315-403c70596775",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7102ff8d-d976-49bc-8652-ca773d6e8d35"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "65363d2b-680c-48d9-8d64-d487bb495809",
          "title": "Array Tests",
          "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\chai.js",
          "file": "\\test\\chai.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have length of 3",
              "fullTitle": "Array Tests should have length of 3",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3];\nassert.lengthOf(arr, 3);",
              "err": {},
              "uuid": "20a44112-adc3-4f9b-ad40-94688c53d2ef",
              "parentUUID": "65363d2b-680c-48d9-8d64-d487bb495809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include value 5",
              "fullTitle": "Array Tests should include value 5",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3, 5];\nassert.include(arr, 5);",
              "err": {},
              "uuid": "f35e8e5d-aac7-4a37-8237-c25733f2610e",
              "parentUUID": "65363d2b-680c-48d9-8d64-d487bb495809",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be empty",
              "fullTitle": "Array Tests should be empty",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [];\nassert.isEmpty(arr);",
              "err": {},
              "uuid": "03f43e71-830e-409d-9cb3-1f588862ada7",
              "parentUUID": "65363d2b-680c-48d9-8d64-d487bb495809",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20a44112-adc3-4f9b-ad40-94688c53d2ef",
            "f35e8e5d-aac7-4a37-8237-c25733f2610e",
            "03f43e71-830e-409d-9cb3-1f588862ada7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bca5a583-dbe9-45b6-a425-acbfcd563d23",
          "title": "Array Tests",
          "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\chai.js",
          "file": "\\test\\chai.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have length of 3",
              "fullTitle": "Array Tests should have length of 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3];\nexpect(arr).to.have.lengthOf(3);",
              "err": {},
              "uuid": "b1167443-1970-48c4-b71f-ec7e1c2fccb0",
              "parentUUID": "bca5a583-dbe9-45b6-a425-acbfcd563d23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include value 5",
              "fullTitle": "Array Tests should include value 5",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3, 5];\nexpect(arr).to.include(5);",
              "err": {},
              "uuid": "83849aa5-0724-406a-8882-16a3ff27fd51",
              "parentUUID": "bca5a583-dbe9-45b6-a425-acbfcd563d23",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be empty",
              "fullTitle": "Array Tests should be empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [];\nexpect(arr).to.be.empty;",
              "err": {},
              "uuid": "d0d5b763-e36a-4202-bcb1-5ed50a942c16",
              "parentUUID": "bca5a583-dbe9-45b6-a425-acbfcd563d23",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b1167443-1970-48c4-b71f-ec7e1c2fccb0",
            "83849aa5-0724-406a-8882-16a3ff27fd51",
            "d0d5b763-e36a-4202-bcb1-5ed50a942c16"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4a15b699-27ce-49c4-96ff-1710d20f6dbd",
          "title": "Array Tests",
          "fullFile": "C:\\Users\\satya\\Desktop\\cahi_mocha_demo\\test\\chai.js",
          "file": "\\test\\chai.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should have length of 3",
              "fullTitle": "Array Tests should have length of 3",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3];\narr.should.have.lengthOf(3);",
              "err": {},
              "uuid": "8701859c-d9a2-4636-b450-5a3a94e765f7",
              "parentUUID": "4a15b699-27ce-49c4-96ff-1710d20f6dbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should include value 5",
              "fullTitle": "Array Tests should include value 5",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [1, 2, 3, 5];\narr.should.include(5);",
              "err": {},
              "uuid": "8db4721f-69c6-482c-9d88-985119ed282b",
              "parentUUID": "4a15b699-27ce-49c4-96ff-1710d20f6dbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be empty",
              "fullTitle": "Array Tests should be empty",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const arr = [];\narr.should.be.empty;",
              "err": {},
              "uuid": "218942d8-6d7e-4f2e-91ec-11886c69ab36",
              "parentUUID": "4a15b699-27ce-49c4-96ff-1710d20f6dbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8701859c-d9a2-4636-b450-5a3a94e765f7",
            "8db4721f-69c6-482c-9d88-985119ed282b",
            "218942d8-6d7e-4f2e-91ec-11886c69ab36"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}